{"ast":null,"code":"import _objectSpread from\"D:/ProgramDevelop/switchboard-plus-v2/web-ui-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import io from'socket.io-client';import axios from'axios';import'./App.css';// 컴포넌트들\nimport Header from'./components/Header';import StatsBar from'./components/StatsBar';import PresetSection from'./components/PresetSection';import GroupSection from'./components/GroupSection';import ClientMonitor from'./components/ClientMonitor';import ExecutionMonitor from'./components/ExecutionMonitor';import ClientDetailModal from'./components/ClientDetailModal';import AddClientModal from'./components/AddClientModal';import PresetModal from'./components/PresetModal';import GroupModal from'./components/GroupModal';import Toast from'./components/Toast';// API 기본 URL\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:8000/api';function App(){// 상태 관리\nconst[isDarkMode,setIsDarkMode]=useState(false);const[isSocketConnected,setIsSocketConnected]=useState(false);const[currentTime,setCurrentTime]=useState(new Date());// 데이터 상태\nconst[clients,setClients]=useState([]);const[groups,setGroups]=useState([]);const[presets,setPresets]=useState([]);const[executions,setExecutions]=useState([]);const[clientHistory,setClientHistory]=useState({});// 선택 상태\nconst[selectedClients,setSelectedClients]=useState(new Set());const[selectedGroups,setSelectedGroups]=useState(new Set());const[selectedPresets,setSelectedPresets]=useState(new Set());// 모달 상태\nconst[showClientModal,setShowClientModal]=useState(false);const[showAddClientModal,setShowAddClientModal]=useState(false);const[showPresetModal,setShowPresetModal]=useState(false);const[showGroupModal,setShowGroupModal]=useState(false);const[currentClientId,setCurrentClientId]=useState(null);const[editingPreset,setEditingPreset]=useState(null);const[editingGroup,setEditingGroup]=useState(null);// 토스트 상태\nconst[toast,setToast]=useState({show:false,message:'',type:'info'});// 초기화\nuseEffect(()=>{initializeTheme();initializeSocket();startAutoRefresh();updateTime();fetchInitialData();const timeInterval=setInterval(updateTime,1000);return()=>clearInterval(timeInterval);},[]);// API 데이터 가져오기\nconst fetchInitialData=async()=>{try{await Promise.all([fetchClients(),fetchGroups(),fetchPresets()]);}catch(error){console.error('초기 데이터 로드 실패:',error);// API 실패 시 데모 데이터 생성\ncreateDemoData();}};// API 함수들\nconst fetchClients=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/clients\"));setClients(response.data);}catch(error){console.error('클라이언트 조회 실패:',error);throw error;}};const fetchGroups=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/groups\"));setGroups(response.data);}catch(error){console.error('그룹 조회 실패:',error);throw error;}};const fetchPresets=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/presets\"));setPresets(response.data);}catch(error){console.error('프리셋 조회 실패:',error);throw error;}};// 테마 초기화\nconst initializeTheme=()=>{const savedTheme=localStorage.getItem('theme');if(savedTheme==='dark'){setIsDarkMode(true);document.body.setAttribute('data-theme','dark');}};// Socket 초기화 (시뮬레이션)\nconst initializeSocket=()=>{setTimeout(()=>{setIsSocketConnected(Math.random()>0.1);if(isSocketConnected){simulateRealTimeUpdates();}},1500);};// 자동 새로고침\nconst startAutoRefresh=()=>{setInterval(()=>{if(isSocketConnected){refreshClientsData();}},30000);};// 시간 업데이트\nconst updateTime=()=>{setCurrentTime(new Date());};// 실시간 업데이트 시뮬레이션\nconst simulateRealTimeUpdates=()=>{setInterval(()=>{if(isSocketConnected&&clients.length>0){simulateRandomClientUpdate();}},15000);};const simulateRandomClientUpdate=()=>{if(clients.length===0)return;const randomClient=clients[Math.floor(Math.random()*clients.length)];const currentStatus=randomClient.status;let newStatus=currentStatus;if(currentStatus==='offline'&&Math.random()<0.3){newStatus='online';}else if(currentStatus==='online'&&Math.random()<0.2){newStatus=Math.random()<0.5?'running':'offline';}else if(currentStatus==='running'&&Math.random()<0.1){newStatus='online';}if(newStatus!==currentStatus){updateClientStatus(randomClient.id,newStatus);addClientHistory(randomClient.id,\"\\uC0C1\\uD0DC \\uBCC0\\uACBD: \".concat(currentStatus,\" \\u2192 \").concat(newStatus));}};const refreshClientsData=()=>{console.log('클라이언트 데이터 자동 새로고침...');};// 클라이언트 상태 업데이트\nconst updateClientStatus=(clientId,status)=>{setClients(prev=>prev.map(client=>client.id===clientId?_objectSpread(_objectSpread({},client),{},{status,last_seen:new Date()}):client));};// 클라이언트 히스토리 추가\nconst addClientHistory=(clientId,event)=>{setClientHistory(prev=>{const history=prev[clientId]||[];const newHistory=[{event,timestamp:new Date()},...history.slice(0,9)// 최대 10개만 유지\n];return _objectSpread(_objectSpread({},prev),{},{[clientId]:newHistory});});};// 테마 토글\nconst toggleDarkMode=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);if(newDarkMode){document.body.setAttribute('data-theme','dark');localStorage.setItem('theme','dark');}else{document.body.removeAttribute('data-theme');localStorage.setItem('theme','light');}showToast(newDarkMode?'다크 모드가 활성화되었습니다.':'라이트 모드가 활성화되었습니다.','success');};// 토스트 표시\nconst showToast=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setToast({show:true,message,type});setTimeout(()=>setToast({show:false,message:'',type:'info'}),4000);};// 클라이언트 관리\nconst handleAddClient=async clientData=>{try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/clients\"),clientData);await fetchClients();showToast(\"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\\"\".concat(clientData.name,\"\\\"\\uC774(\\uAC00) \\uCD94\\uAC00\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}catch(error){var _error$response,_error$response$data;console.error('클라이언트 추가 실패:',error);showToast('클라이언트 추가 실패: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message),'error');}};const handleDeleteClient=async clientId=>{if(!window.confirm('정말로 이 클라이언트를 삭제하시겠습니까?'))return;try{await axios.delete(\"\".concat(API_BASE_URL,\"/clients/\").concat(clientId));await fetchClients();showToast('클라이언트가 삭제되었습니다.','error');}catch(error){var _error$response2,_error$response2$data;console.error('클라이언트 삭제 실패:',error);showToast('클라이언트 삭제 실패: '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message),'error');}};const handleClientAction=async action=>{if(!currentClientId)return;try{const client=clients.find(c=>c.id===currentClientId);if(!client)return;switch(action){case'heartbeat':showToast(\"\\\"\".concat(client.name,\"\\\"\\uC5D0 \\uC0C1\\uD0DC \\uD655\\uC778 \\uC694\\uCCAD\\uC744 \\uC804\\uC1A1\\uD588\\uC2B5\\uB2C8\\uB2E4.\"),'info');addClientHistory(currentClientId,'상태 확인 요청');break;case'stop_all':showToast(\"\\\"\".concat(client.name,\"\\\"\\uC758 \\uBAA8\\uB4E0 \\uD504\\uB85C\\uC138\\uC2A4 \\uC911\\uC9C0 \\uBA85\\uB839\\uC744 \\uC804\\uC1A1\\uD588\\uC2B5\\uB2C8\\uB2E4.\"),'success');addClientHistory(currentClientId,'모든 프로세스 중지됨');break;case'delete':await handleDeleteClient(currentClientId);setShowClientModal(false);break;}}catch(error){var _error$response3,_error$response3$data;console.error('클라이언트 액션 실패:',error);showToast('클라이언트 액션 실패: '+(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message),'error');}};// 그룹 관리\nconst handleAddGroup=async groupData=>{try{await axios.post(\"\".concat(API_BASE_URL,\"/groups\"),groupData);await fetchGroups();showToast(\"\\uADF8\\uB8F9 \\\"\".concat(groupData.name,\"\\\"\\uC774(\\uAC00) \\uC0DD\\uC131\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}catch(error){var _error$response4,_error$response4$data;console.error('그룹 추가 실패:',error);showToast('그룹 추가 실패: '+(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||error.message),'error');}};const handleEditGroup=groupId=>{const group=groups.find(g=>g.id===groupId);if(group){setEditingGroup(group);setShowGroupModal(true);}};const handleSaveGroup=async groupData=>{try{if(editingGroup){await axios.put(\"\".concat(API_BASE_URL,\"/groups/\").concat(editingGroup.id),groupData);}else{await axios.post(\"\".concat(API_BASE_URL,\"/groups\"),groupData);}await fetchGroups();setShowGroupModal(false);setEditingGroup(null);showToast(\"\\uADF8\\uB8F9 \\\"\".concat(groupData.name,\"\\\"\\uC774(\\uAC00) \\uC800\\uC7A5\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}catch(error){var _error$response5,_error$response5$data;console.error('그룹 저장 실패:',error);showToast('그룹 저장 실패: '+(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||error.message),'error');}};const handleDeleteGroup=async groupId=>{const group=groups.find(g=>g.id===groupId);if(!group)return;if(window.confirm(\"\\uC815\\uB9D0 \\\"\".concat(group.name,\"\\\" \\uADF8\\uB8F9\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){try{await axios.delete(\"\".concat(API_BASE_URL,\"/groups/\").concat(groupId));await fetchGroups();showToast(\"\\uADF8\\uB8F9 \\\"\".concat(group.name,\"\\\"\\uC774(\\uAC00) \\uC0AD\\uC81C\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'error');}catch(error){var _error$response6,_error$response6$data;console.error('그룹 삭제 실패:',error);showToast('그룹 삭제 실패: '+(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||error.message),'error');}}};// 프리셋 관리\nconst handleAddPreset=presetData=>{setEditingPreset(null);setShowPresetModal(true);};const handleEditPreset=presetId=>{const preset=presets.find(p=>p.id===presetId);if(preset){setEditingPreset(preset);setShowPresetModal(true);}};const handleSavePreset=async presetData=>{try{if(editingPreset){await axios.put(\"\".concat(API_BASE_URL,\"/presets/\").concat(editingPreset.id),presetData);}else{await axios.post(\"\".concat(API_BASE_URL,\"/presets\"),presetData);}await fetchPresets();setShowPresetModal(false);setEditingPreset(null);showToast(\"\\uD504\\uB9AC\\uC14B \\\"\".concat(presetData.name,\"\\\"\\uC774(\\uAC00) \\uC800\\uC7A5\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}catch(error){var _error$response7,_error$response7$data;console.error('프리셋 저장 실패:',error);showToast('프리셋 저장 실패: '+(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||error.message),'error');}};const handleDeletePreset=async presetId=>{const preset=presets.find(p=>p.id===presetId);if(!preset)return;if(window.confirm(\"\\uC815\\uB9D0 \\\"\".concat(preset.name,\"\\\" \\uD504\\uB9AC\\uC14B\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){try{await axios.delete(\"\".concat(API_BASE_URL,\"/presets/\").concat(presetId));await fetchPresets();showToast(\"\\uD504\\uB9AC\\uC14B \\\"\".concat(preset.name,\"\\\"\\uC774(\\uAC00) \\uC0AD\\uC81C\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'error');}catch(error){var _error$response8,_error$response8$data;console.error('프리셋 삭제 실패:',error);showToast('프리셋 삭제 실패: '+(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.error)||error.message),'error');}}};// 프리셋 실행\nconst handleExecutePreset=async presetId=>{try{var _response$data$target;const response=await axios.post(\"\".concat(API_BASE_URL,\"/presets/\").concat(presetId,\"/execute\"));// 실행 기록 생성\nconst execution={id:\"exec_\".concat(Date.now()),preset_id:presetId,preset_name:response.data.preset_name||'알 수 없는 프리셋',target_clients:response.data.target_clients||[],status:'running',started_at:new Date(),completed_at:null,results:{}};setExecutions(prev=>[execution,...prev.slice(0,9)]);showToast(\"\\uD504\\uB9AC\\uC14B\\uC774 \".concat(((_response$data$target=response.data.target_clients)===null||_response$data$target===void 0?void 0:_response$data$target.length)||0,\"\\uAC1C \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC5D0\\uC11C \\uC2E4\\uD589\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');// 실행 완료 시뮬레이션 (10-30초 후)\nsetTimeout(()=>{completeExecution(execution.id);},Math.random()*20000+10000);}catch(error){var _error$response9,_error$response9$data;console.error('프리셋 실행 실패:',error);showToast('프리셋 실행 실패: '+(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.error)||error.message),'error');}};const completeExecution=executionId=>{setExecutions(prev=>prev.map(exec=>{if(exec.id===executionId){const updatedExec=_objectSpread(_objectSpread({},exec),{},{status:'completed',completed_at:new Date()});// 클라이언트들을 온라인 상태로 변경\nexec.target_clients.forEach(clientId=>{updatedExec.results[clientId]=Math.random()>0.1?'success':'failed';updateClientStatus(clientId,'online');addClientHistory(clientId,\"\\uD504\\uB9AC\\uC14B \\uC644\\uB8CC: \".concat(updatedExec.results[clientId]));});return updatedExec;}return exec;}));// 프리셋 비활성화\nconst execution=executions.find(e=>e.id===executionId);if(execution){setPresets(prev=>prev.map(p=>p.id===execution.preset_id?_objectSpread(_objectSpread({},p),{},{is_active:false}):p));}const successCount=Object.values(execution.results||{}).filter(r=>r==='success').length;const failedCount=Object.values(execution.results||{}).filter(r=>r==='failed').length;showToast(\"\\uD504\\uB9AC\\uC14B \\uC2E4\\uD589 \\uC644\\uB8CC: \\uC131\\uACF5 \".concat(successCount,\"\\uAC1C, \\uC2E4\\uD328 \").concat(failedCount,\"\\uAC1C\"),failedCount===0?'success':'warning');};// 일괄 제어\nconst handleSelectAllPresets=checked=>{if(checked){setSelectedPresets(new Set(presets.map(p=>p.id)));}else{setSelectedPresets(new Set());}};const handleSelectAllGroups=checked=>{if(checked){setSelectedGroups(new Set(groups.map(g=>g.id)));}else{setSelectedGroups(new Set());}};const handleBulkPresetAction=action=>{if(selectedPresets.size===0){showToast('선택된 프리셋이 없습니다.','error');return;}const actionNames={execute:'실행',stop:'정지',delete:'삭제'};const actionName=actionNames[action];const presetCount=selectedPresets.size;if(action==='delete'){if(window.confirm(\"\\uC120\\uD0DD\\uB41C \".concat(presetCount,\"\\uAC1C \\uD504\\uB9AC\\uC14B\\uC744 \\uBAA8\\uB450 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){selectedPresets.forEach(presetId=>handleDeletePreset(presetId));setSelectedPresets(new Set());}}else if(action==='execute'){if(window.confirm(\"\\uC120\\uD0DD\\uB41C \".concat(presetCount,\"\\uAC1C \\uD504\\uB9AC\\uC14B\\uC744 \\uBAA8\\uB450 \\uC2E4\\uD589\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){let executed=0;selectedPresets.forEach(presetId=>{const preset=presets.find(p=>p.id===presetId);if(preset&&!preset.is_active){handleExecutePreset(presetId);executed++;}});showToast(\"\".concat(executed,\"\\uAC1C \\uD504\\uB9AC\\uC14B\\uC774 \\uC2E4\\uD589\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}}};const handleBulkGroupAction=action=>{if(selectedGroups.size===0){showToast('선택된 그룹이 없습니다.','error');return;}const actionNames={on:'켜기',reboot:'재부팅',off:'끄기'};const actionName=actionNames[action];const groupCount=selectedGroups.size;if(window.confirm(\"\\uC120\\uD0DD\\uB41C \".concat(groupCount,\"\\uAC1C \\uADF8\\uB8F9\\uC758 \\uBAA8\\uB4E0 \\uB514\\uC2A4\\uD50C\\uB808\\uC774 \\uC11C\\uBC84\\uB97C \").concat(actionName,\" \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){let totalClients=0;selectedGroups.forEach(groupId=>{const group=groups.find(g=>g.id===groupId);if(group){totalClients+=group.client_ids.length;group.client_ids.forEach(clientId=>{addClientHistory(clientId,\"\\uC804\\uC6D0 \".concat(actionName,\" \\uBA85\\uB839 \\uC218\\uC2E0\"));});}});showToast(\"\".concat(groupCount,\"\\uAC1C \\uADF8\\uB8F9 (\").concat(totalClients,\"\\uB300 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8)\\uC5D0 \\uC804\\uC6D0 \").concat(actionName,\" \\uBA85\\uB839\\uC744 \\uC804\\uC1A1\\uD588\\uC2B5\\uB2C8\\uB2E4. (v2.1\\uC5D0\\uC11C \\uD65C\\uC131\\uD654)\"),'info');}};// 데모 데이터 생성\nconst createDemoData=()=>{setTimeout(()=>{// 데모 클라이언트\nconst demoClients=[{name:'Display_01',ip_address:'192.168.1.101',status:'online'},{name:'Display_02',ip_address:'192.168.1.102',status:'running'},{name:'Display_03',ip_address:'192.168.1.103',status:'offline'},{name:'Display_04',ip_address:'192.168.1.104',status:'online'}];const newClients=demoClients.map((clientData,index)=>({id:\"demo_client_\".concat(index+1),name:clientData.name,ip_address:clientData.ip_address,port:8081,description:\"\\uB370\\uBAA8 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \".concat(index+1),status:clientData.status,created_at:new Date(Date.now()-index*86400000),last_seen:clientData.status!=='offline'?new Date():null}));setClients(newClients);newClients.forEach(client=>addClientHistory(client.id,'데모 데이터로 생성됨'));// 데모 그룹\nsetTimeout(()=>{const demoGroup={id:'demo_group_1',name:'메인 디스플레이 월',description:'중앙 메인 디스플레이 구역',client_ids:['demo_client_1','demo_client_2','demo_client_4'],created_at:new Date()};setGroups([demoGroup]);},500);// 데모 프리셋\nsetTimeout(()=>{const demoPreset={id:'demo_preset_1',name:'메인 콘텐츠 재생',description:'4K 메인 콘텐츠 스트리밍',command:'D:\\\\UnrealProjects\\\\MainContent\\\\Windows\\\\MainContent.exe None -messaging -dc_cluster -nosplash -dc_cfg=\"C:\\\\nDisplay\\\\MainWall.ndisplay\" -dc_node=Node_0 -fullscreen',group_ids:['demo_group_1'],created_at:new Date(),is_active:false};setPresets([demoPreset]);},1000);showToast('데모 데이터가 로드되었습니다. 실제 환경에서는 서버와 연동됩니다.','info');},3000);};// 통계 계산\nconst stats={totalClients:clients.length,onlineClients:clients.filter(c=>c.status==='online'||c.status==='running').length,runningClients:clients.filter(c=>c.status==='running').length,activeExecutions:executions.filter(e=>e.status==='running').length,totalGroups:groups.length};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{isDarkMode:isDarkMode,isSocketConnected:isSocketConnected,currentTime:currentTime,connectedCount:stats.onlineClients,onToggleTheme:toggleDarkMode}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(StatsBar,{stats:stats}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-layout\",children:[/*#__PURE__*/_jsx(PresetSection,{presets:presets,groups:groups,selectedPresets:selectedPresets,onSelectAll:handleSelectAllPresets,onBulkAction:handleBulkPresetAction,onAddPreset:()=>{setEditingPreset(null);setShowPresetModal(true);},onEditPreset:handleEditPreset,onDeletePreset:handleDeletePreset,onExecutePreset:handleExecutePreset,onSelectPreset:(presetId,selected)=>{setSelectedPresets(prev=>{const newSet=new Set(prev);if(selected){newSet.add(presetId);}else{newSet.delete(presetId);}return newSet;});}}),/*#__PURE__*/_jsx(GroupSection,{groups:groups,clients:clients,selectedGroups:selectedGroups,onSelectAll:handleSelectAllGroups,onBulkAction:handleBulkGroupAction,onAddGroup:()=>{setEditingGroup(null);setShowGroupModal(true);},onEditGroup:handleEditGroup,onDeleteGroup:handleDeleteGroup,onSelectGroup:(groupId,selected)=>{setSelectedGroups(prev=>{const newSet=new Set(prev);if(selected){newSet.add(groupId);}else{newSet.delete(groupId);}return newSet;});}})]}),/*#__PURE__*/_jsx(ClientMonitor,{clients:clients,onAddClient:()=>setShowAddClientModal(true),onClientClick:clientId=>{setCurrentClientId(clientId);setShowClientModal(true);}}),/*#__PURE__*/_jsx(ExecutionMonitor,{executions:executions,clients:clients})]}),showClientModal&&/*#__PURE__*/_jsx(ClientDetailModal,{client:clients.find(c=>c.id===currentClientId),history:clientHistory[currentClientId]||[],onClose:()=>setShowClientModal(false),onAction:handleClientAction,onDelete:()=>{setCurrentClientId(null);setShowClientModal(false);}}),showAddClientModal&&/*#__PURE__*/_jsx(AddClientModal,{onClose:()=>setShowAddClientModal(false),onAddClient:handleAddClient}),showPresetModal&&/*#__PURE__*/_jsx(PresetModal,{onClose:()=>{setShowPresetModal(false);setEditingPreset(null);},onSave:handleSavePreset,editingPreset:editingPreset,groups:groups}),showGroupModal&&/*#__PURE__*/_jsx(GroupModal,{onClose:()=>{setShowGroupModal(false);setEditingGroup(null);},onSave:handleSaveGroup,editingGroup:editingGroup,clients:clients}),/*#__PURE__*/_jsx(Toast,{show:toast.show,message:toast.message,type:toast.type})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","io","axios","Header","StatsBar","PresetSection","GroupSection","ClientMonitor","ExecutionMonitor","ClientDetailModal","AddClientModal","PresetModal","GroupModal","Toast","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","App","isDarkMode","setIsDarkMode","isSocketConnected","setIsSocketConnected","currentTime","setCurrentTime","Date","clients","setClients","groups","setGroups","presets","setPresets","executions","setExecutions","clientHistory","setClientHistory","selectedClients","setSelectedClients","Set","selectedGroups","setSelectedGroups","selectedPresets","setSelectedPresets","showClientModal","setShowClientModal","showAddClientModal","setShowAddClientModal","showPresetModal","setShowPresetModal","showGroupModal","setShowGroupModal","currentClientId","setCurrentClientId","editingPreset","setEditingPreset","editingGroup","setEditingGroup","toast","setToast","show","message","type","initializeTheme","initializeSocket","startAutoRefresh","updateTime","fetchInitialData","timeInterval","setInterval","clearInterval","Promise","all","fetchClients","fetchGroups","fetchPresets","error","console","createDemoData","response","get","concat","data","savedTheme","localStorage","getItem","document","body","setAttribute","setTimeout","Math","random","simulateRealTimeUpdates","refreshClientsData","length","simulateRandomClientUpdate","randomClient","floor","currentStatus","status","newStatus","updateClientStatus","id","addClientHistory","log","clientId","prev","map","client","_objectSpread","last_seen","event","history","newHistory","timestamp","slice","toggleDarkMode","newDarkMode","setItem","removeAttribute","showToast","arguments","undefined","handleAddClient","clientData","post","name","_error$response","_error$response$data","handleDeleteClient","window","confirm","delete","_error$response2","_error$response2$data","handleClientAction","action","find","c","_error$response3","_error$response3$data","handleAddGroup","groupData","_error$response4","_error$response4$data","handleEditGroup","groupId","group","g","handleSaveGroup","put","_error$response5","_error$response5$data","handleDeleteGroup","_error$response6","_error$response6$data","handleAddPreset","presetData","handleEditPreset","presetId","preset","p","handleSavePreset","_error$response7","_error$response7$data","handleDeletePreset","_error$response8","_error$response8$data","handleExecutePreset","_response$data$target","execution","now","preset_id","preset_name","target_clients","started_at","completed_at","results","completeExecution","_error$response9","_error$response9$data","executionId","exec","updatedExec","forEach","e","is_active","successCount","Object","values","filter","r","failedCount","handleSelectAllPresets","checked","handleSelectAllGroups","handleBulkPresetAction","size","actionNames","execute","stop","actionName","presetCount","executed","handleBulkGroupAction","on","reboot","off","groupCount","totalClients","client_ids","demoClients","ip_address","newClients","index","port","description","created_at","demoGroup","demoPreset","command","group_ids","stats","onlineClients","runningClients","activeExecutions","totalGroups","className","children","connectedCount","onToggleTheme","onSelectAll","onBulkAction","onAddPreset","onEditPreset","onDeletePreset","onExecutePreset","onSelectPreset","selected","newSet","add","onAddGroup","onEditGroup","onDeleteGroup","onSelectGroup","onAddClient","onClientClick","onClose","onAction","onDelete","onSave"],"sources":["D:/ProgramDevelop/switchboard-plus-v2/web-ui-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n// 컴포넌트들\r\nimport Header from './components/Header';\r\nimport StatsBar from './components/StatsBar';\r\nimport PresetSection from './components/PresetSection';\r\nimport GroupSection from './components/GroupSection';\r\nimport ClientMonitor from './components/ClientMonitor';\r\nimport ExecutionMonitor from './components/ExecutionMonitor';\r\nimport ClientDetailModal from './components/ClientDetailModal';\r\nimport AddClientModal from './components/AddClientModal';\r\nimport PresetModal from './components/PresetModal';\r\nimport GroupModal from './components/GroupModal';\r\nimport Toast from './components/Toast';\r\n\r\n// API 기본 URL\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\nfunction App() {\r\n  // 상태 관리\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  \r\n  // 데이터 상태\r\n  const [clients, setClients] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [presets, setPresets] = useState([]);\r\n  const [executions, setExecutions] = useState([]);\r\n  const [clientHistory, setClientHistory] = useState({});\r\n  \r\n  // 선택 상태\r\n  const [selectedClients, setSelectedClients] = useState(new Set());\r\n  const [selectedGroups, setSelectedGroups] = useState(new Set());\r\n  const [selectedPresets, setSelectedPresets] = useState(new Set());\r\n  \r\n  // 모달 상태\r\n  const [showClientModal, setShowClientModal] = useState(false);\r\n  const [showAddClientModal, setShowAddClientModal] = useState(false);\r\n  const [showPresetModal, setShowPresetModal] = useState(false);\r\n  const [showGroupModal, setShowGroupModal] = useState(false);\r\n  const [currentClientId, setCurrentClientId] = useState(null);\r\n  const [editingPreset, setEditingPreset] = useState(null);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  \r\n  // 토스트 상태\r\n  const [toast, setToast] = useState({ show: false, message: '', type: 'info' });\r\n\r\n  // 초기화\r\n  useEffect(() => {\r\n    initializeTheme();\r\n    initializeSocket();\r\n    startAutoRefresh();\r\n    updateTime();\r\n    fetchInitialData();\r\n    \r\n    const timeInterval = setInterval(updateTime, 1000);\r\n    return () => clearInterval(timeInterval);\r\n  }, []);\r\n\r\n  // API 데이터 가져오기\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      await Promise.all([\r\n        fetchClients(),\r\n        fetchGroups(),\r\n        fetchPresets()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('초기 데이터 로드 실패:', error);\r\n      // API 실패 시 데모 데이터 생성\r\n      createDemoData();\r\n    }\r\n  };\r\n\r\n  // API 함수들\r\n  const fetchClients = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/clients`);\r\n      setClients(response.data);\r\n    } catch (error) {\r\n      console.error('클라이언트 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const fetchGroups = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/groups`);\r\n      setGroups(response.data);\r\n    } catch (error) {\r\n      console.error('그룹 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const fetchPresets = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/presets`);\r\n      setPresets(response.data);\r\n    } catch (error) {\r\n      console.error('프리셋 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 테마 초기화\r\n  const initializeTheme = () => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n      setIsDarkMode(true);\r\n      document.body.setAttribute('data-theme', 'dark');\r\n    }\r\n  };\r\n\r\n  // Socket 초기화 (시뮬레이션)\r\n  const initializeSocket = () => {\r\n    setTimeout(() => {\r\n      setIsSocketConnected(Math.random() > 0.1);\r\n      if (isSocketConnected) {\r\n        simulateRealTimeUpdates();\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  // 자동 새로고침\r\n  const startAutoRefresh = () => {\r\n    setInterval(() => {\r\n      if (isSocketConnected) {\r\n        refreshClientsData();\r\n      }\r\n    }, 30000);\r\n  };\r\n\r\n  // 시간 업데이트\r\n  const updateTime = () => {\r\n    setCurrentTime(new Date());\r\n  };\r\n\r\n  // 실시간 업데이트 시뮬레이션\r\n  const simulateRealTimeUpdates = () => {\r\n    setInterval(() => {\r\n      if (isSocketConnected && clients.length > 0) {\r\n        simulateRandomClientUpdate();\r\n      }\r\n    }, 15000);\r\n  };\r\n\r\n  const simulateRandomClientUpdate = () => {\r\n    if (clients.length === 0) return;\r\n    \r\n    const randomClient = clients[Math.floor(Math.random() * clients.length)];\r\n    const currentStatus = randomClient.status;\r\n    \r\n    let newStatus = currentStatus;\r\n    if (currentStatus === 'offline' && Math.random() < 0.3) {\r\n      newStatus = 'online';\r\n    } else if (currentStatus === 'online' && Math.random() < 0.2) {\r\n      newStatus = Math.random() < 0.5 ? 'running' : 'offline';\r\n    } else if (currentStatus === 'running' && Math.random() < 0.1) {\r\n      newStatus = 'online';\r\n    }\r\n    \r\n    if (newStatus !== currentStatus) {\r\n      updateClientStatus(randomClient.id, newStatus);\r\n      addClientHistory(randomClient.id, `상태 변경: ${currentStatus} → ${newStatus}`);\r\n    }\r\n  };\r\n\r\n  const refreshClientsData = () => {\r\n    console.log('클라이언트 데이터 자동 새로고침...');\r\n  };\r\n\r\n  // 클라이언트 상태 업데이트\r\n  const updateClientStatus = (clientId, status) => {\r\n    setClients(prev => prev.map(client => \r\n      client.id === clientId \r\n        ? { ...client, status, last_seen: new Date() }\r\n        : client\r\n    ));\r\n  };\r\n\r\n  // 클라이언트 히스토리 추가\r\n  const addClientHistory = (clientId, event) => {\r\n    setClientHistory(prev => {\r\n      const history = prev[clientId] || [];\r\n      const newHistory = [\r\n        { event, timestamp: new Date() },\r\n        ...history.slice(0, 9) // 최대 10개만 유지\r\n      ];\r\n      return { ...prev, [clientId]: newHistory };\r\n    });\r\n  };\r\n\r\n  // 테마 토글\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !isDarkMode;\r\n    setIsDarkMode(newDarkMode);\r\n    \r\n    if (newDarkMode) {\r\n      document.body.setAttribute('data-theme', 'dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.body.removeAttribute('data-theme');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n    \r\n    showToast(newDarkMode ? '다크 모드가 활성화되었습니다.' : '라이트 모드가 활성화되었습니다.', 'success');\r\n  };\r\n\r\n  // 토스트 표시\r\n  const showToast = (message, type = 'info') => {\r\n    setToast({ show: true, message, type });\r\n    setTimeout(() => setToast({ show: false, message: '', type: 'info' }), 4000);\r\n  };\r\n\r\n  // 클라이언트 관리\r\n  const handleAddClient = async (clientData) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/clients`, clientData);\r\n      await fetchClients();\r\n      showToast(`클라이언트 \"${clientData.name}\"이(가) 추가되었습니다.`, 'success');\r\n    } catch (error) {\r\n      console.error('클라이언트 추가 실패:', error);\r\n      showToast('클라이언트 추가 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteClient = async (clientId) => {\r\n    if (!window.confirm('정말로 이 클라이언트를 삭제하시겠습니까?')) return;\r\n    \r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/clients/${clientId}`);\r\n      await fetchClients();\r\n      showToast('클라이언트가 삭제되었습니다.', 'error');\r\n    } catch (error) {\r\n      console.error('클라이언트 삭제 실패:', error);\r\n      showToast('클라이언트 삭제 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleClientAction = async (action) => {\r\n    if (!currentClientId) return;\r\n    \r\n    try {\r\n      const client = clients.find(c => c.id === currentClientId);\r\n      if (!client) return;\r\n      \r\n      switch(action) {\r\n        case 'heartbeat':\r\n          showToast(`\"${client.name}\"에 상태 확인 요청을 전송했습니다.`, 'info');\r\n          addClientHistory(currentClientId, '상태 확인 요청');\r\n          break;\r\n        case 'stop_all':\r\n          showToast(`\"${client.name}\"의 모든 프로세스 중지 명령을 전송했습니다.`, 'success');\r\n          addClientHistory(currentClientId, '모든 프로세스 중지됨');\r\n          break;\r\n        case 'delete':\r\n          await handleDeleteClient(currentClientId);\r\n          setShowClientModal(false);\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('클라이언트 액션 실패:', error);\r\n      showToast('클라이언트 액션 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  // 그룹 관리\r\n  const handleAddGroup = async (groupData) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/groups`, groupData);\r\n      await fetchGroups();\r\n      showToast(`그룹 \"${groupData.name}\"이(가) 생성되었습니다.`, 'success');\r\n    } catch (error) {\r\n      console.error('그룹 추가 실패:', error);\r\n      showToast('그룹 추가 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleEditGroup = (groupId) => {\r\n    const group = groups.find(g => g.id === groupId);\r\n    if (group) {\r\n      setEditingGroup(group);\r\n      setShowGroupModal(true);\r\n    }\r\n  };\r\n\r\n  const handleSaveGroup = async (groupData) => {\r\n    try {\r\n      if (editingGroup) {\r\n        await axios.put(`${API_BASE_URL}/groups/${editingGroup.id}`, groupData);\r\n      } else {\r\n        await axios.post(`${API_BASE_URL}/groups`, groupData);\r\n      }\r\n      await fetchGroups();\r\n      setShowGroupModal(false);\r\n      setEditingGroup(null);\r\n      showToast(`그룹 \"${groupData.name}\"이(가) 저장되었습니다.`, 'success');\r\n    } catch (error) {\r\n      console.error('그룹 저장 실패:', error);\r\n      showToast('그룹 저장 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteGroup = async (groupId) => {\r\n    const group = groups.find(g => g.id === groupId);\r\n    if (!group) return;\r\n    \r\n    if (window.confirm(`정말 \"${group.name}\" 그룹을 삭제하시겠습니까?`)) {\r\n      try {\r\n        await axios.delete(`${API_BASE_URL}/groups/${groupId}`);\r\n        await fetchGroups();\r\n        showToast(`그룹 \"${group.name}\"이(가) 삭제되었습니다.`, 'error');\r\n      } catch (error) {\r\n        console.error('그룹 삭제 실패:', error);\r\n        showToast('그룹 삭제 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // 프리셋 관리\r\n  const handleAddPreset = (presetData) => {\r\n    setEditingPreset(null);\r\n    setShowPresetModal(true);\r\n  };\r\n\r\n  const handleEditPreset = (presetId) => {\r\n    const preset = presets.find(p => p.id === presetId);\r\n    if (preset) {\r\n      setEditingPreset(preset);\r\n      setShowPresetModal(true);\r\n    }\r\n  };\r\n\r\n  const handleSavePreset = async (presetData) => {\r\n    try {\r\n      if (editingPreset) {\r\n        await axios.put(`${API_BASE_URL}/presets/${editingPreset.id}`, presetData);\r\n      } else {\r\n        await axios.post(`${API_BASE_URL}/presets`, presetData);\r\n      }\r\n      await fetchPresets();\r\n      setShowPresetModal(false);\r\n      setEditingPreset(null);\r\n      showToast(`프리셋 \"${presetData.name}\"이(가) 저장되었습니다.`, 'success');\r\n    } catch (error) {\r\n      console.error('프리셋 저장 실패:', error);\r\n      showToast('프리셋 저장 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeletePreset = async (presetId) => {\r\n    const preset = presets.find(p => p.id === presetId);\r\n    if (!preset) return;\r\n    \r\n    if (window.confirm(`정말 \"${preset.name}\" 프리셋을 삭제하시겠습니까?`)) {\r\n      try {\r\n        await axios.delete(`${API_BASE_URL}/presets/${presetId}`);\r\n        await fetchPresets();\r\n        showToast(`프리셋 \"${preset.name}\"이(가) 삭제되었습니다.`, 'error');\r\n      } catch (error) {\r\n        console.error('프리셋 삭제 실패:', error);\r\n        showToast('프리셋 삭제 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // 프리셋 실행\r\n  const handleExecutePreset = async (presetId) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/presets/${presetId}/execute`);\r\n      \r\n      // 실행 기록 생성\r\n      const execution = {\r\n        id: `exec_${Date.now()}`,\r\n        preset_id: presetId,\r\n        preset_name: response.data.preset_name || '알 수 없는 프리셋',\r\n        target_clients: response.data.target_clients || [],\r\n        status: 'running',\r\n        started_at: new Date(),\r\n        completed_at: null,\r\n        results: {}\r\n      };\r\n      \r\n      setExecutions(prev => [execution, ...prev.slice(0, 9)]);\r\n      \r\n      showToast(`프리셋이 ${response.data.target_clients?.length || 0}개 클라이언트에서 실행되었습니다.`, 'success');\r\n      \r\n      // 실행 완료 시뮬레이션 (10-30초 후)\r\n      setTimeout(() => {\r\n        completeExecution(execution.id);\r\n      }, Math.random() * 20000 + 10000);\r\n    } catch (error) {\r\n      console.error('프리셋 실행 실패:', error);\r\n      showToast('프리셋 실행 실패: ' + (error.response?.data?.error || error.message), 'error');\r\n    }\r\n  };\r\n\r\n  const completeExecution = (executionId) => {\r\n    setExecutions(prev => prev.map(exec => {\r\n      if (exec.id === executionId) {\r\n        const updatedExec = {\r\n          ...exec,\r\n          status: 'completed',\r\n          completed_at: new Date()\r\n        };\r\n        \r\n        // 클라이언트들을 온라인 상태로 변경\r\n        exec.target_clients.forEach(clientId => {\r\n          updatedExec.results[clientId] = Math.random() > 0.1 ? 'success' : 'failed';\r\n          updateClientStatus(clientId, 'online');\r\n          addClientHistory(clientId, `프리셋 완료: ${updatedExec.results[clientId]}`);\r\n        });\r\n        \r\n        return updatedExec;\r\n      }\r\n      return exec;\r\n    }));\r\n    \r\n    // 프리셋 비활성화\r\n    const execution = executions.find(e => e.id === executionId);\r\n    if (execution) {\r\n      setPresets(prev => prev.map(p => \r\n        p.id === execution.preset_id ? { ...p, is_active: false } : p\r\n      ));\r\n    }\r\n    \r\n    const successCount = Object.values(execution.results || {}).filter(r => r === 'success').length;\r\n    const failedCount = Object.values(execution.results || {}).filter(r => r === 'failed').length;\r\n    \r\n    showToast(`프리셋 실행 완료: 성공 ${successCount}개, 실패 ${failedCount}개`, \r\n             failedCount === 0 ? 'success' : 'warning');\r\n  };\r\n\r\n  // 일괄 제어\r\n  const handleSelectAllPresets = (checked) => {\r\n    if (checked) {\r\n      setSelectedPresets(new Set(presets.map(p => p.id)));\r\n    } else {\r\n      setSelectedPresets(new Set());\r\n    }\r\n  };\r\n\r\n  const handleSelectAllGroups = (checked) => {\r\n    if (checked) {\r\n      setSelectedGroups(new Set(groups.map(g => g.id)));\r\n    } else {\r\n      setSelectedGroups(new Set());\r\n    }\r\n  };\r\n\r\n  const handleBulkPresetAction = (action) => {\r\n    if (selectedPresets.size === 0) {\r\n      showToast('선택된 프리셋이 없습니다.', 'error');\r\n      return;\r\n    }\r\n    \r\n    const actionNames = { execute: '실행', stop: '정지', delete: '삭제' };\r\n    const actionName = actionNames[action];\r\n    const presetCount = selectedPresets.size;\r\n    \r\n    if (action === 'delete') {\r\n      if (window.confirm(`선택된 ${presetCount}개 프리셋을 모두 삭제하시겠습니까?`)) {\r\n        selectedPresets.forEach(presetId => handleDeletePreset(presetId));\r\n        setSelectedPresets(new Set());\r\n      }\r\n    } else if (action === 'execute') {\r\n      if (window.confirm(`선택된 ${presetCount}개 프리셋을 모두 실행하시겠습니까?`)) {\r\n        let executed = 0;\r\n        selectedPresets.forEach(presetId => {\r\n          const preset = presets.find(p => p.id === presetId);\r\n          if (preset && !preset.is_active) {\r\n            handleExecutePreset(presetId);\r\n            executed++;\r\n          }\r\n        });\r\n        showToast(`${executed}개 프리셋이 실행되었습니다.`, 'success');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBulkGroupAction = (action) => {\r\n    if (selectedGroups.size === 0) {\r\n      showToast('선택된 그룹이 없습니다.', 'error');\r\n      return;\r\n    }\r\n    \r\n    const actionNames = { on: '켜기', reboot: '재부팅', off: '끄기' };\r\n    const actionName = actionNames[action];\r\n    const groupCount = selectedGroups.size;\r\n    \r\n    if (window.confirm(`선택된 ${groupCount}개 그룹의 모든 디스플레이 서버를 ${actionName} 하시겠습니까?`)) {\r\n      let totalClients = 0;\r\n      selectedGroups.forEach(groupId => {\r\n        const group = groups.find(g => g.id === groupId);\r\n        if (group) {\r\n          totalClients += group.client_ids.length;\r\n          group.client_ids.forEach(clientId => {\r\n            addClientHistory(clientId, `전원 ${actionName} 명령 수신`);\r\n          });\r\n        }\r\n      });\r\n      \r\n      showToast(`${groupCount}개 그룹 (${totalClients}대 클라이언트)에 전원 ${actionName} 명령을 전송했습니다. (v2.1에서 활성화)`, 'info');\r\n    }\r\n  };\r\n\r\n  // 데모 데이터 생성\r\n  const createDemoData = () => {\r\n    setTimeout(() => {\r\n      // 데모 클라이언트\r\n      const demoClients = [\r\n        { name: 'Display_01', ip_address: '192.168.1.101', status: 'online' },\r\n        { name: 'Display_02', ip_address: '192.168.1.102', status: 'running' },\r\n        { name: 'Display_03', ip_address: '192.168.1.103', status: 'offline' },\r\n        { name: 'Display_04', ip_address: '192.168.1.104', status: 'online' }\r\n      ];\r\n      \r\n      const newClients = demoClients.map((clientData, index) => ({\r\n        id: `demo_client_${index + 1}`,\r\n        name: clientData.name,\r\n        ip_address: clientData.ip_address,\r\n        port: 8081,\r\n        description: `데모 클라이언트 ${index + 1}`,\r\n        status: clientData.status,\r\n        created_at: new Date(Date.now() - (index * 86400000)),\r\n        last_seen: clientData.status !== 'offline' ? new Date() : null\r\n      }));\r\n      \r\n      setClients(newClients);\r\n      newClients.forEach(client => addClientHistory(client.id, '데모 데이터로 생성됨'));\r\n      \r\n      // 데모 그룹\r\n      setTimeout(() => {\r\n        const demoGroup = {\r\n          id: 'demo_group_1',\r\n          name: '메인 디스플레이 월',\r\n          description: '중앙 메인 디스플레이 구역',\r\n          client_ids: ['demo_client_1', 'demo_client_2', 'demo_client_4'],\r\n          created_at: new Date()\r\n        };\r\n        \r\n        setGroups([demoGroup]);\r\n      }, 500);\r\n      \r\n      // 데모 프리셋\r\n      setTimeout(() => {\r\n        const demoPreset = {\r\n          id: 'demo_preset_1',\r\n          name: '메인 콘텐츠 재생',\r\n          description: '4K 메인 콘텐츠 스트리밍',\r\n          command: 'D:\\\\UnrealProjects\\\\MainContent\\\\Windows\\\\MainContent.exe None -messaging -dc_cluster -nosplash -dc_cfg=\"C:\\\\nDisplay\\\\MainWall.ndisplay\" -dc_node=Node_0 -fullscreen',\r\n          group_ids: ['demo_group_1'],\r\n          created_at: new Date(),\r\n          is_active: false\r\n        };\r\n        \r\n        setPresets([demoPreset]);\r\n      }, 1000);\r\n      \r\n      showToast('데모 데이터가 로드되었습니다. 실제 환경에서는 서버와 연동됩니다.', 'info');\r\n    }, 3000);\r\n  };\r\n\r\n  // 통계 계산\r\n  const stats = {\r\n    totalClients: clients.length,\r\n    onlineClients: clients.filter(c => c.status === 'online' || c.status === 'running').length,\r\n    runningClients: clients.filter(c => c.status === 'running').length,\r\n    activeExecutions: executions.filter(e => e.status === 'running').length,\r\n    totalGroups: groups.length\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        isDarkMode={isDarkMode}\r\n        isSocketConnected={isSocketConnected}\r\n        currentTime={currentTime}\r\n        connectedCount={stats.onlineClients}\r\n        onToggleTheme={toggleDarkMode}\r\n      />\r\n      \r\n      <div className=\"container\">\r\n        <StatsBar stats={stats} />\r\n        \r\n        <div className=\"main-layout\">\r\n          <PresetSection \r\n            presets={presets}\r\n            groups={groups}\r\n            selectedPresets={selectedPresets}\r\n            onSelectAll={handleSelectAllPresets}\r\n            onBulkAction={handleBulkPresetAction}\r\n            onAddPreset={() => {\r\n              setEditingPreset(null);\r\n              setShowPresetModal(true);\r\n            }}\r\n            onEditPreset={handleEditPreset}\r\n            onDeletePreset={handleDeletePreset}\r\n            onExecutePreset={handleExecutePreset}\r\n            onSelectPreset={(presetId, selected) => {\r\n              setSelectedPresets(prev => {\r\n                const newSet = new Set(prev);\r\n                if (selected) {\r\n                  newSet.add(presetId);\r\n                } else {\r\n                  newSet.delete(presetId);\r\n                }\r\n                return newSet;\r\n              });\r\n            }}\r\n          />\r\n          \r\n          <GroupSection \r\n            groups={groups}\r\n            clients={clients}\r\n            selectedGroups={selectedGroups}\r\n            onSelectAll={handleSelectAllGroups}\r\n            onBulkAction={handleBulkGroupAction}\r\n            onAddGroup={() => {\r\n              setEditingGroup(null);\r\n              setShowGroupModal(true);\r\n            }}\r\n            onEditGroup={handleEditGroup}\r\n            onDeleteGroup={handleDeleteGroup}\r\n            onSelectGroup={(groupId, selected) => {\r\n              setSelectedGroups(prev => {\r\n                const newSet = new Set(prev);\r\n                if (selected) {\r\n                  newSet.add(groupId);\r\n                } else {\r\n                  newSet.delete(groupId);\r\n                }\r\n                return newSet;\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <ClientMonitor \r\n          clients={clients}\r\n          onAddClient={() => setShowAddClientModal(true)}\r\n          onClientClick={(clientId) => {\r\n            setCurrentClientId(clientId);\r\n            setShowClientModal(true);\r\n          }}\r\n        />\r\n        \r\n        <ExecutionMonitor \r\n          executions={executions}\r\n          clients={clients}\r\n        />\r\n      </div>\r\n      \r\n      {/* 모달들 */}\r\n      {showClientModal && (\r\n        <ClientDetailModal \r\n          client={clients.find(c => c.id === currentClientId)}\r\n          history={clientHistory[currentClientId] || []}\r\n          onClose={() => setShowClientModal(false)}\r\n          onAction={handleClientAction}\r\n          onDelete={() => {\r\n            setCurrentClientId(null);\r\n            setShowClientModal(false);\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      {showAddClientModal && (\r\n        <AddClientModal \r\n          onClose={() => setShowAddClientModal(false)}\r\n          onAddClient={handleAddClient}\r\n        />\r\n      )}\r\n      \r\n      {showPresetModal && (\r\n        <PresetModal \r\n          onClose={() => {\r\n            setShowPresetModal(false);\r\n            setEditingPreset(null);\r\n          }}\r\n          onSave={handleSavePreset}\r\n          editingPreset={editingPreset}\r\n          groups={groups}\r\n        />\r\n      )}\r\n      \r\n      {showGroupModal && (\r\n        <GroupModal \r\n          onClose={() => {\r\n            setShowGroupModal(false);\r\n            setEditingGroup(null);\r\n          }}\r\n          onSave={handleSaveGroup}\r\n          editingGroup={editingGroup}\r\n          clients={clients}\r\n        />\r\n      )}\r\n      \r\n      {/* 토스트 */}\r\n      <Toast \r\n        show={toast.show}\r\n        message={toast.message}\r\n        type={toast.type}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}