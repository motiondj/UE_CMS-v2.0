{"ast":null,"code":"import _objectSpread from\"D:/ProgramDevelop/switchboard-plus-v2/web-ui-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import io from'socket.io-client';import axios from'axios';import'./App.css';// 컴포넌트들\nimport Header from'./components/Header';import StatsBar from'./components/StatsBar';import PresetSection from'./components/PresetSection';import GroupSection from'./components/GroupSection';import ClientMonitor from'./components/ClientMonitor';import ExecutionMonitor from'./components/ExecutionMonitor';import ClientDetailModal from'./components/ClientDetailModal';import AddClientModal from'./components/AddClientModal';import PresetModal from'./components/PresetModal';import GroupModal from'./components/GroupModal';import Toast from'./components/Toast';// API 기본 URL\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:8000/api';function App(){// 상태 관리\nconst[isDarkMode,setIsDarkMode]=useState(false);const[isSocketConnected,setIsSocketConnected]=useState(false);const[currentTime,setCurrentTime]=useState(new Date());// 데이터 상태\nconst[clients,setClients]=useState([]);const[groups,setGroups]=useState([]);const[presets,setPresets]=useState([]);const[executions,setExecutions]=useState([]);const[clientHistory,setClientHistory]=useState({});// 선택 상태\nconst[selectedClients,setSelectedClients]=useState(new Set());const[selectedGroups,setSelectedGroups]=useState(new Set());const[selectedPresets,setSelectedPresets]=useState(new Set());// 모달 상태\nconst[showClientModal,setShowClientModal]=useState(false);const[showAddClientModal,setShowAddClientModal]=useState(false);const[showPresetModal,setShowPresetModal]=useState(false);const[showGroupModal,setShowGroupModal]=useState(false);const[currentClientId,setCurrentClientId]=useState(null);const[editingPreset,setEditingPreset]=useState(null);const[editingGroup,setEditingGroup]=useState(null);// 토스트 상태\nconst[toast,setToast]=useState({show:false,message:'',type:'info'});// 초기화\nuseEffect(()=>{initializeTheme();initializeSocket();startAutoRefresh();updateTime();createDemoData();const timeInterval=setInterval(updateTime,1000);return()=>clearInterval(timeInterval);},[]);// 테마 초기화\nconst initializeTheme=()=>{const savedTheme=localStorage.getItem('theme');if(savedTheme==='dark'){setIsDarkMode(true);document.body.setAttribute('data-theme','dark');}};// Socket 초기화 (시뮬레이션)\nconst initializeSocket=()=>{setTimeout(()=>{setIsSocketConnected(Math.random()>0.1);if(isSocketConnected){simulateRealTimeUpdates();}},1500);};// 자동 새로고침\nconst startAutoRefresh=()=>{setInterval(()=>{if(isSocketConnected){refreshClientsData();}},30000);};// 시간 업데이트\nconst updateTime=()=>{setCurrentTime(new Date());};// 실시간 업데이트 시뮬레이션\nconst simulateRealTimeUpdates=()=>{setInterval(()=>{if(isSocketConnected&&clients.length>0){simulateRandomClientUpdate();}},15000);};const simulateRandomClientUpdate=()=>{if(clients.length===0)return;const randomClient=clients[Math.floor(Math.random()*clients.length)];const currentStatus=randomClient.status;let newStatus=currentStatus;if(currentStatus==='offline'&&Math.random()<0.3){newStatus='online';}else if(currentStatus==='online'&&Math.random()<0.2){newStatus=Math.random()<0.5?'running':'offline';}else if(currentStatus==='running'&&Math.random()<0.1){newStatus='online';}if(newStatus!==currentStatus){updateClientStatus(randomClient.id,newStatus);addClientHistory(randomClient.id,\"\\uC0C1\\uD0DC \\uBCC0\\uACBD: \".concat(currentStatus,\" \\u2192 \").concat(newStatus));}};const refreshClientsData=()=>{console.log('클라이언트 데이터 자동 새로고침...');};// 클라이언트 상태 업데이트\nconst updateClientStatus=(clientId,status)=>{setClients(prev=>prev.map(client=>client.id===clientId?_objectSpread(_objectSpread({},client),{},{status,last_seen:new Date()}):client));};// 클라이언트 히스토리 추가\nconst addClientHistory=(clientId,event)=>{setClientHistory(prev=>{const history=prev[clientId]||[];const newHistory=[{event,timestamp:new Date()},...history.slice(0,9)// 최대 10개만 유지\n];return _objectSpread(_objectSpread({},prev),{},{[clientId]:newHistory});});};// 테마 토글\nconst toggleDarkMode=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);if(newDarkMode){document.body.setAttribute('data-theme','dark');localStorage.setItem('theme','dark');}else{document.body.removeAttribute('data-theme');localStorage.setItem('theme','light');}showToast(newDarkMode?'다크 모드가 활성화되었습니다.':'라이트 모드가 활성화되었습니다.','success');};// 토스트 표시\nconst showToast=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setToast({show:true,message,type});setTimeout(()=>setToast({show:false,message:'',type:'info'}),4000);};// 클라이언트 관리\nconst handleAddClient=clientData=>{const newClient=_objectSpread(_objectSpread({id:\"client_\".concat(Date.now())},clientData),{},{status:'offline',created_at:new Date(),last_seen:null});setClients(prev=>[...prev,newClient]);addClientHistory(newClient.id,'클라이언트 등록됨');showToast(\"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\\"\".concat(clientData.name,\"\\\"\\uC774(\\uAC00) \\uCD94\\uAC00\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');// 연결 확인 시뮬레이션\nsetTimeout(()=>{verifyClientConnection(newClient.id);},2000);};const verifyClientConnection=clientId=>{const success=Math.random()>0.3;const client=clients.find(c=>c.id===clientId);if(success){updateClientStatus(clientId,'online');showToast(\"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\\"\".concat(client.name,\"\\\"\\uC774(\\uAC00) \\uC5F0\\uACB0\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"),'success');addClientHistory(clientId,'연결 확인됨');}else{showToast(\"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\\"\".concat(client.name,\"\\\"\\uC774(\\uAC00) \\uC751\\uB2F5\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"),'warning');addClientHistory(clientId,'연결 실패 - 응답 없음');}};const handleClientAction=action=>{const client=clients.find(c=>c.id===currentClientId);if(!client)return;switch(action){case'heartbeat':showToast(\"\\\"\".concat(client.name,\"\\\"\\uC5D0 \\uC0C1\\uD0DC \\uD655\\uC778 \\uC694\\uCCAD\\uC744 \\uC804\\uC1A1\\uD588\\uC2B5\\uB2C8\\uB2E4.\"),'info');break;case'stop_all':if(client.status==='running'){updateClientStatus(currentClientId,'online');showToast(\"\\\"\".concat(client.name,\"\\\"\\uC758 \\uBAA8\\uB4E0 \\uD504\\uB85C\\uC138\\uC2A4 \\uC911\\uC9C0 \\uBA85\\uB839\\uC744 \\uC804\\uC1A1\\uD588\\uC2B5\\uB2C8\\uB2E4.\"),'success');addClientHistory(currentClientId,'모든 프로세스 중지됨');}else{showToast('실행 중인 프로세스가 없습니다.','warning');}break;}};const handleDeleteClient=()=>{const client=clients.find(c=>c.id===currentClientId);if(!client)return;if(window.confirm(\"\\uC815\\uB9D0 \\\"\".concat(client.name,\"\\\" \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uB97C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){setClients(prev=>prev.filter(c=>c.id!==currentClientId));setClientHistory(prev=>{const newHistory=_objectSpread({},prev);delete newHistory[currentClientId];return newHistory;});setShowClientModal(false);showToast(\"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\\"\".concat(client.name,\"\\\"\\uC774(\\uAC00) \\uC0AD\\uC81C\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'error');}};// 그룹 관리\nconst handleAddGroup=groupData=>{const newGroup=_objectSpread(_objectSpread({id:\"group_\".concat(Date.now())},groupData),{},{created_at:new Date()});setGroups(prev=>[...prev,newGroup]);showToast(\"\\uC0C8 \\uADF8\\uB8F9 \\\"\".concat(groupData.name,\"\\\"\\uC774(\\uAC00) \\uC0DD\\uC131\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');};const handleEditGroup=groupId=>{const group=groups.find(g=>g.id===groupId);if(group){setEditingGroup(group);setShowGroupModal(true);}};const handleSaveGroup=groupData=>{if(editingGroup){setGroups(prev=>prev.map(g=>g.id===editingGroup.id?_objectSpread(_objectSpread({},g),groupData):g));showToast(\"\\uADF8\\uB8F9 \\\"\".concat(groupData.name,\"\\\"\\uC774(\\uAC00) \\uC218\\uC815\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}else{handleAddGroup(groupData);}};const handleDeleteGroup=groupId=>{const group=groups.find(g=>g.id===groupId);if(!group)return;if(window.confirm(\"\\uC815\\uB9D0 \\\"\".concat(group.name,\"\\\" \\uADF8\\uB8F9\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){setGroups(prev=>prev.filter(g=>g.id!==groupId));showToast(\"\\uADF8\\uB8F9 \\\"\".concat(group.name,\"\\\"\\uC774(\\uAC00) \\uC0AD\\uC81C\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'error');}};// 프리셋 관리\nconst handleAddPreset=presetData=>{const newPreset=_objectSpread(_objectSpread({id:\"preset_\".concat(Date.now())},presetData),{},{created_at:new Date(),is_active:false});setPresets(prev=>[...prev,newPreset]);showToast(\"\\uC0C8 \\uD504\\uB9AC\\uC14B \\\"\".concat(presetData.name,\"\\\"\\uC774(\\uAC00) \\uC0DD\\uC131\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');};const handleEditPreset=presetId=>{const preset=presets.find(p=>p.id===presetId);if(preset){setEditingPreset(preset);setShowPresetModal(true);}};const handleSavePreset=presetData=>{if(editingPreset){setPresets(prev=>prev.map(p=>p.id===editingPreset.id?_objectSpread(_objectSpread({},p),presetData):p));showToast(\"\\uD504\\uB9AC\\uC14B \\\"\".concat(presetData.name,\"\\\"\\uC774(\\uAC00) \\uC218\\uC815\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}else{handleAddPreset(presetData);}};const handleDeletePreset=presetId=>{const preset=presets.find(p=>p.id===presetId);if(!preset)return;if(window.confirm(\"\\uC815\\uB9D0 \\\"\".concat(preset.name,\"\\\" \\uD504\\uB9AC\\uC14B\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){setPresets(prev=>prev.filter(p=>p.id!==presetId));showToast(\"\\uD504\\uB9AC\\uC14B \\\"\".concat(preset.name,\"\\\"\\uC774(\\uAC00) \\uC0AD\\uC81C\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'error');}};// 프리셋 실행\nconst handleExecutePreset=presetId=>{const preset=presets.find(p=>p.id===presetId);if(!preset)return;// 대상 클라이언트 수집\nconst targetClients=new Set();preset.group_ids.forEach(groupId=>{const group=groups.find(g=>g.id===groupId);if(group){group.client_ids.forEach(clientId=>{const client=clients.find(c=>c.id===clientId);if(client&&client.status!=='offline'){targetClients.add(clientId);}});}});if(targetClients.size===0){showToast('실행 가능한 온라인 클라이언트가 없습니다.','error');return;}// 실행 기록 생성\nconst executionId=\"exec_\".concat(Date.now());const execution={id:executionId,preset_id:presetId,preset_name:preset.name,target_clients:Array.from(targetClients),status:'running',started_at:new Date(),completed_at:null,results:{}};// 각 클라이언트를 실행 중 상태로 변경\ntargetClients.forEach(clientId=>{updateClientStatus(clientId,'running');execution.results[clientId]='running';addClientHistory(clientId,\"\\uD504\\uB9AC\\uC14B \\uC2E4\\uD589: \".concat(preset.name));});// 프리셋 활성화\nsetPresets(prev=>prev.map(p=>p.id===presetId?_objectSpread(_objectSpread({},p),{},{is_active:true}):p));setExecutions(prev=>[execution,...prev.slice(0,9)]);showToast(\"\\uD504\\uB9AC\\uC14B \\\"\".concat(preset.name,\"\\\"\\uC774(\\uAC00) \").concat(targetClients.size,\"\\uAC1C \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC5D0\\uC11C \\uC2E4\\uD589\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');// 실행 완료 시뮬레이션 (10-30초 후)\nsetTimeout(()=>{completeExecution(executionId);},Math.random()*20000+10000);};const completeExecution=executionId=>{setExecutions(prev=>prev.map(exec=>{if(exec.id===executionId){const updatedExec=_objectSpread(_objectSpread({},exec),{},{status:'completed',completed_at:new Date()});// 클라이언트들을 온라인 상태로 변경\nexec.target_clients.forEach(clientId=>{updatedExec.results[clientId]=Math.random()>0.1?'success':'failed';updateClientStatus(clientId,'online');addClientHistory(clientId,\"\\uD504\\uB9AC\\uC14B \\uC644\\uB8CC: \".concat(updatedExec.results[clientId]));});return updatedExec;}return exec;}));// 프리셋 비활성화\nconst execution=executions.find(e=>e.id===executionId);if(execution){setPresets(prev=>prev.map(p=>p.id===execution.preset_id?_objectSpread(_objectSpread({},p),{},{is_active:false}):p));}const successCount=Object.values(execution.results||{}).filter(r=>r==='success').length;const failedCount=Object.values(execution.results||{}).filter(r=>r==='failed').length;showToast(\"\\uD504\\uB9AC\\uC14B \\uC2E4\\uD589 \\uC644\\uB8CC: \\uC131\\uACF5 \".concat(successCount,\"\\uAC1C, \\uC2E4\\uD328 \").concat(failedCount,\"\\uAC1C\"),failedCount===0?'success':'warning');};// 일괄 제어\nconst handleSelectAllPresets=checked=>{if(checked){setSelectedPresets(new Set(presets.map(p=>p.id)));}else{setSelectedPresets(new Set());}};const handleSelectAllGroups=checked=>{if(checked){setSelectedGroups(new Set(groups.map(g=>g.id)));}else{setSelectedGroups(new Set());}};const handleBulkPresetAction=action=>{if(selectedPresets.size===0){showToast('선택된 프리셋이 없습니다.','error');return;}const actionNames={execute:'실행',stop:'정지',delete:'삭제'};const actionName=actionNames[action];const presetCount=selectedPresets.size;if(action==='delete'){if(window.confirm(\"\\uC120\\uD0DD\\uB41C \".concat(presetCount,\"\\uAC1C \\uD504\\uB9AC\\uC14B\\uC744 \\uBAA8\\uB450 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){selectedPresets.forEach(presetId=>handleDeletePreset(presetId));setSelectedPresets(new Set());}}else if(action==='execute'){if(window.confirm(\"\\uC120\\uD0DD\\uB41C \".concat(presetCount,\"\\uAC1C \\uD504\\uB9AC\\uC14B\\uC744 \\uBAA8\\uB450 \\uC2E4\\uD589\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){let executed=0;selectedPresets.forEach(presetId=>{const preset=presets.find(p=>p.id===presetId);if(preset&&!preset.is_active){handleExecutePreset(presetId);executed++;}});showToast(\"\".concat(executed,\"\\uAC1C \\uD504\\uB9AC\\uC14B\\uC774 \\uC2E4\\uD589\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"),'success');}}};const handleBulkGroupAction=action=>{if(selectedGroups.size===0){showToast('선택된 그룹이 없습니다.','error');return;}const actionNames={on:'켜기',reboot:'재부팅',off:'끄기'};const actionName=actionNames[action];const groupCount=selectedGroups.size;if(window.confirm(\"\\uC120\\uD0DD\\uB41C \".concat(groupCount,\"\\uAC1C \\uADF8\\uB8F9\\uC758 \\uBAA8\\uB4E0 \\uB514\\uC2A4\\uD50C\\uB808\\uC774 \\uC11C\\uBC84\\uB97C \").concat(actionName,\" \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){let totalClients=0;selectedGroups.forEach(groupId=>{const group=groups.find(g=>g.id===groupId);if(group){totalClients+=group.client_ids.length;group.client_ids.forEach(clientId=>{addClientHistory(clientId,\"\\uC804\\uC6D0 \".concat(actionName,\" \\uBA85\\uB839 \\uC218\\uC2E0\"));});}});showToast(\"\".concat(groupCount,\"\\uAC1C \\uADF8\\uB8F9 (\").concat(totalClients,\"\\uB300 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8)\\uC5D0 \\uC804\\uC6D0 \").concat(actionName,\" \\uBA85\\uB839\\uC744 \\uC804\\uC1A1\\uD588\\uC2B5\\uB2C8\\uB2E4. (v2.1\\uC5D0\\uC11C \\uD65C\\uC131\\uD654)\"),'info');}};// 데모 데이터 생성\nconst createDemoData=()=>{setTimeout(()=>{// 데모 클라이언트\nconst demoClients=[{name:'Display_01',ip_address:'192.168.1.101',status:'online'},{name:'Display_02',ip_address:'192.168.1.102',status:'running'},{name:'Display_03',ip_address:'192.168.1.103',status:'offline'},{name:'Display_04',ip_address:'192.168.1.104',status:'online'}];const newClients=demoClients.map((clientData,index)=>({id:\"demo_client_\".concat(index+1),name:clientData.name,ip_address:clientData.ip_address,port:8081,description:\"\\uB370\\uBAA8 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \".concat(index+1),status:clientData.status,created_at:new Date(Date.now()-index*86400000),last_seen:clientData.status!=='offline'?new Date():null}));setClients(newClients);newClients.forEach(client=>addClientHistory(client.id,'데모 데이터로 생성됨'));// 데모 그룹\nsetTimeout(()=>{const demoGroup={id:'demo_group_1',name:'메인 디스플레이 월',description:'중앙 메인 디스플레이 구역',client_ids:['demo_client_1','demo_client_2','demo_client_4'],created_at:new Date()};setGroups([demoGroup]);},500);// 데모 프리셋\nsetTimeout(()=>{const demoPreset={id:'demo_preset_1',name:'메인 콘텐츠 재생',description:'4K 메인 콘텐츠 스트리밍',command:'D:\\\\UnrealProjects\\\\MainContent\\\\Windows\\\\MainContent.exe None -messaging -dc_cluster -nosplash -dc_cfg=\"C:\\\\nDisplay\\\\MainWall.ndisplay\" -dc_node=Node_0 -fullscreen',group_ids:['demo_group_1'],created_at:new Date(),is_active:false};setPresets([demoPreset]);},1000);showToast('데모 데이터가 로드되었습니다. 실제 환경에서는 서버와 연동됩니다.','info');},3000);};// 통계 계산\nconst stats={totalClients:clients.length,onlineClients:clients.filter(c=>c.status==='online'||c.status==='running').length,runningClients:clients.filter(c=>c.status==='running').length,activeExecutions:executions.filter(e=>e.status==='running').length,totalGroups:groups.length};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{isDarkMode:isDarkMode,isSocketConnected:isSocketConnected,currentTime:currentTime,connectedCount:stats.onlineClients,onToggleTheme:toggleDarkMode}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(StatsBar,{stats:stats}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-layout\",children:[/*#__PURE__*/_jsx(PresetSection,{presets:presets,groups:groups,selectedPresets:selectedPresets,onSelectAll:handleSelectAllPresets,onBulkAction:handleBulkPresetAction,onAddPreset:()=>{setEditingPreset(null);setShowPresetModal(true);},onEditPreset:handleEditPreset,onDeletePreset:handleDeletePreset,onExecutePreset:handleExecutePreset,onSelectPreset:(presetId,selected)=>{setSelectedPresets(prev=>{const newSet=new Set(prev);if(selected){newSet.add(presetId);}else{newSet.delete(presetId);}return newSet;});}}),/*#__PURE__*/_jsx(GroupSection,{groups:groups,clients:clients,selectedGroups:selectedGroups,onSelectAll:handleSelectAllGroups,onBulkAction:handleBulkGroupAction,onAddGroup:()=>{setEditingGroup(null);setShowGroupModal(true);},onEditGroup:handleEditGroup,onDeleteGroup:handleDeleteGroup,onSelectGroup:(groupId,selected)=>{setSelectedGroups(prev=>{const newSet=new Set(prev);if(selected){newSet.add(groupId);}else{newSet.delete(groupId);}return newSet;});}})]}),/*#__PURE__*/_jsx(ClientMonitor,{clients:clients,onAddClient:()=>setShowAddClientModal(true),onClientClick:clientId=>{setCurrentClientId(clientId);setShowClientModal(true);}}),/*#__PURE__*/_jsx(ExecutionMonitor,{executions:executions,clients:clients})]}),showClientModal&&/*#__PURE__*/_jsx(ClientDetailModal,{client:clients.find(c=>c.id===currentClientId),history:clientHistory[currentClientId]||[],onClose:()=>setShowClientModal(false),onAction:handleClientAction,onDelete:handleDeleteClient}),showAddClientModal&&/*#__PURE__*/_jsx(AddClientModal,{onClose:()=>setShowAddClientModal(false),onAddClient:handleAddClient}),showPresetModal&&/*#__PURE__*/_jsx(PresetModal,{onClose:()=>{setShowPresetModal(false);setEditingPreset(null);},onSave:handleSavePreset,editingPreset:editingPreset,groups:groups}),showGroupModal&&/*#__PURE__*/_jsx(GroupModal,{onClose:()=>{setShowGroupModal(false);setEditingGroup(null);},onSave:handleSaveGroup,editingGroup:editingGroup,clients:clients}),/*#__PURE__*/_jsx(Toast,{show:toast.show,message:toast.message,type:toast.type})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","io","axios","Header","StatsBar","PresetSection","GroupSection","ClientMonitor","ExecutionMonitor","ClientDetailModal","AddClientModal","PresetModal","GroupModal","Toast","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","App","isDarkMode","setIsDarkMode","isSocketConnected","setIsSocketConnected","currentTime","setCurrentTime","Date","clients","setClients","groups","setGroups","presets","setPresets","executions","setExecutions","clientHistory","setClientHistory","selectedClients","setSelectedClients","Set","selectedGroups","setSelectedGroups","selectedPresets","setSelectedPresets","showClientModal","setShowClientModal","showAddClientModal","setShowAddClientModal","showPresetModal","setShowPresetModal","showGroupModal","setShowGroupModal","currentClientId","setCurrentClientId","editingPreset","setEditingPreset","editingGroup","setEditingGroup","toast","setToast","show","message","type","initializeTheme","initializeSocket","startAutoRefresh","updateTime","createDemoData","timeInterval","setInterval","clearInterval","savedTheme","localStorage","getItem","document","body","setAttribute","setTimeout","Math","random","simulateRealTimeUpdates","refreshClientsData","length","simulateRandomClientUpdate","randomClient","floor","currentStatus","status","newStatus","updateClientStatus","id","addClientHistory","concat","console","log","clientId","prev","map","client","_objectSpread","last_seen","event","history","newHistory","timestamp","slice","toggleDarkMode","newDarkMode","setItem","removeAttribute","showToast","arguments","undefined","handleAddClient","clientData","newClient","now","created_at","name","verifyClientConnection","success","find","c","handleClientAction","action","handleDeleteClient","window","confirm","filter","handleAddGroup","groupData","newGroup","handleEditGroup","groupId","group","g","handleSaveGroup","handleDeleteGroup","handleAddPreset","presetData","newPreset","is_active","handleEditPreset","presetId","preset","p","handleSavePreset","handleDeletePreset","handleExecutePreset","targetClients","group_ids","forEach","client_ids","add","size","executionId","execution","preset_id","preset_name","target_clients","Array","from","started_at","completed_at","results","completeExecution","exec","updatedExec","e","successCount","Object","values","r","failedCount","handleSelectAllPresets","checked","handleSelectAllGroups","handleBulkPresetAction","actionNames","execute","stop","delete","actionName","presetCount","executed","handleBulkGroupAction","on","reboot","off","groupCount","totalClients","demoClients","ip_address","newClients","index","port","description","demoGroup","demoPreset","command","stats","onlineClients","runningClients","activeExecutions","totalGroups","className","children","connectedCount","onToggleTheme","onSelectAll","onBulkAction","onAddPreset","onEditPreset","onDeletePreset","onExecutePreset","onSelectPreset","selected","newSet","onAddGroup","onEditGroup","onDeleteGroup","onSelectGroup","onAddClient","onClientClick","onClose","onAction","onDelete","onSave"],"sources":["D:/ProgramDevelop/switchboard-plus-v2/web-ui-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n// 컴포넌트들\r\nimport Header from './components/Header';\r\nimport StatsBar from './components/StatsBar';\r\nimport PresetSection from './components/PresetSection';\r\nimport GroupSection from './components/GroupSection';\r\nimport ClientMonitor from './components/ClientMonitor';\r\nimport ExecutionMonitor from './components/ExecutionMonitor';\r\nimport ClientDetailModal from './components/ClientDetailModal';\r\nimport AddClientModal from './components/AddClientModal';\r\nimport PresetModal from './components/PresetModal';\r\nimport GroupModal from './components/GroupModal';\r\nimport Toast from './components/Toast';\r\n\r\n// API 기본 URL\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\nfunction App() {\r\n  // 상태 관리\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  \r\n  // 데이터 상태\r\n  const [clients, setClients] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [presets, setPresets] = useState([]);\r\n  const [executions, setExecutions] = useState([]);\r\n  const [clientHistory, setClientHistory] = useState({});\r\n  \r\n  // 선택 상태\r\n  const [selectedClients, setSelectedClients] = useState(new Set());\r\n  const [selectedGroups, setSelectedGroups] = useState(new Set());\r\n  const [selectedPresets, setSelectedPresets] = useState(new Set());\r\n  \r\n  // 모달 상태\r\n  const [showClientModal, setShowClientModal] = useState(false);\r\n  const [showAddClientModal, setShowAddClientModal] = useState(false);\r\n  const [showPresetModal, setShowPresetModal] = useState(false);\r\n  const [showGroupModal, setShowGroupModal] = useState(false);\r\n  const [currentClientId, setCurrentClientId] = useState(null);\r\n  const [editingPreset, setEditingPreset] = useState(null);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  \r\n  // 토스트 상태\r\n  const [toast, setToast] = useState({ show: false, message: '', type: 'info' });\r\n\r\n  // 초기화\r\n  useEffect(() => {\r\n    initializeTheme();\r\n    initializeSocket();\r\n    startAutoRefresh();\r\n    updateTime();\r\n    createDemoData();\r\n    \r\n    const timeInterval = setInterval(updateTime, 1000);\r\n    return () => clearInterval(timeInterval);\r\n  }, []);\r\n\r\n  // 테마 초기화\r\n  const initializeTheme = () => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n      setIsDarkMode(true);\r\n      document.body.setAttribute('data-theme', 'dark');\r\n    }\r\n  };\r\n\r\n  // Socket 초기화 (시뮬레이션)\r\n  const initializeSocket = () => {\r\n    setTimeout(() => {\r\n      setIsSocketConnected(Math.random() > 0.1);\r\n      if (isSocketConnected) {\r\n        simulateRealTimeUpdates();\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  // 자동 새로고침\r\n  const startAutoRefresh = () => {\r\n    setInterval(() => {\r\n      if (isSocketConnected) {\r\n        refreshClientsData();\r\n      }\r\n    }, 30000);\r\n  };\r\n\r\n  // 시간 업데이트\r\n  const updateTime = () => {\r\n    setCurrentTime(new Date());\r\n  };\r\n\r\n  // 실시간 업데이트 시뮬레이션\r\n  const simulateRealTimeUpdates = () => {\r\n    setInterval(() => {\r\n      if (isSocketConnected && clients.length > 0) {\r\n        simulateRandomClientUpdate();\r\n      }\r\n    }, 15000);\r\n  };\r\n\r\n  const simulateRandomClientUpdate = () => {\r\n    if (clients.length === 0) return;\r\n    \r\n    const randomClient = clients[Math.floor(Math.random() * clients.length)];\r\n    const currentStatus = randomClient.status;\r\n    \r\n    let newStatus = currentStatus;\r\n    if (currentStatus === 'offline' && Math.random() < 0.3) {\r\n      newStatus = 'online';\r\n    } else if (currentStatus === 'online' && Math.random() < 0.2) {\r\n      newStatus = Math.random() < 0.5 ? 'running' : 'offline';\r\n    } else if (currentStatus === 'running' && Math.random() < 0.1) {\r\n      newStatus = 'online';\r\n    }\r\n    \r\n    if (newStatus !== currentStatus) {\r\n      updateClientStatus(randomClient.id, newStatus);\r\n      addClientHistory(randomClient.id, `상태 변경: ${currentStatus} → ${newStatus}`);\r\n    }\r\n  };\r\n\r\n  const refreshClientsData = () => {\r\n    console.log('클라이언트 데이터 자동 새로고침...');\r\n  };\r\n\r\n  // 클라이언트 상태 업데이트\r\n  const updateClientStatus = (clientId, status) => {\r\n    setClients(prev => prev.map(client => \r\n      client.id === clientId \r\n        ? { ...client, status, last_seen: new Date() }\r\n        : client\r\n    ));\r\n  };\r\n\r\n  // 클라이언트 히스토리 추가\r\n  const addClientHistory = (clientId, event) => {\r\n    setClientHistory(prev => {\r\n      const history = prev[clientId] || [];\r\n      const newHistory = [\r\n        { event, timestamp: new Date() },\r\n        ...history.slice(0, 9) // 최대 10개만 유지\r\n      ];\r\n      return { ...prev, [clientId]: newHistory };\r\n    });\r\n  };\r\n\r\n  // 테마 토글\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !isDarkMode;\r\n    setIsDarkMode(newDarkMode);\r\n    \r\n    if (newDarkMode) {\r\n      document.body.setAttribute('data-theme', 'dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.body.removeAttribute('data-theme');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n    \r\n    showToast(newDarkMode ? '다크 모드가 활성화되었습니다.' : '라이트 모드가 활성화되었습니다.', 'success');\r\n  };\r\n\r\n  // 토스트 표시\r\n  const showToast = (message, type = 'info') => {\r\n    setToast({ show: true, message, type });\r\n    setTimeout(() => setToast({ show: false, message: '', type: 'info' }), 4000);\r\n  };\r\n\r\n  // 클라이언트 관리\r\n  const handleAddClient = (clientData) => {\r\n    const newClient = {\r\n      id: `client_${Date.now()}`,\r\n      ...clientData,\r\n      status: 'offline',\r\n      created_at: new Date(),\r\n      last_seen: null\r\n    };\r\n    \r\n    setClients(prev => [...prev, newClient]);\r\n    addClientHistory(newClient.id, '클라이언트 등록됨');\r\n    showToast(`클라이언트 \"${clientData.name}\"이(가) 추가되었습니다.`, 'success');\r\n    \r\n    // 연결 확인 시뮬레이션\r\n    setTimeout(() => {\r\n      verifyClientConnection(newClient.id);\r\n    }, 2000);\r\n  };\r\n\r\n  const verifyClientConnection = (clientId) => {\r\n    const success = Math.random() > 0.3;\r\n    const client = clients.find(c => c.id === clientId);\r\n    \r\n    if (success) {\r\n      updateClientStatus(clientId, 'online');\r\n      showToast(`클라이언트 \"${client.name}\"이(가) 연결되었습니다!`, 'success');\r\n      addClientHistory(clientId, '연결 확인됨');\r\n    } else {\r\n      showToast(`클라이언트 \"${client.name}\"이(가) 응답하지 않습니다.`, 'warning');\r\n      addClientHistory(clientId, '연결 실패 - 응답 없음');\r\n    }\r\n  };\r\n\r\n  const handleClientAction = (action) => {\r\n    const client = clients.find(c => c.id === currentClientId);\r\n    if (!client) return;\r\n    \r\n    switch(action) {\r\n      case 'heartbeat':\r\n        showToast(`\"${client.name}\"에 상태 확인 요청을 전송했습니다.`, 'info');\r\n        break;\r\n      case 'stop_all':\r\n        if (client.status === 'running') {\r\n          updateClientStatus(currentClientId, 'online');\r\n          showToast(`\"${client.name}\"의 모든 프로세스 중지 명령을 전송했습니다.`, 'success');\r\n          addClientHistory(currentClientId, '모든 프로세스 중지됨');\r\n        } else {\r\n          showToast('실행 중인 프로세스가 없습니다.', 'warning');\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDeleteClient = () => {\r\n    const client = clients.find(c => c.id === currentClientId);\r\n    if (!client) return;\r\n    \r\n    if (window.confirm(`정말 \"${client.name}\" 클라이언트를 삭제하시겠습니까?`)) {\r\n      setClients(prev => prev.filter(c => c.id !== currentClientId));\r\n      setClientHistory(prev => {\r\n        const newHistory = { ...prev };\r\n        delete newHistory[currentClientId];\r\n        return newHistory;\r\n      });\r\n      setShowClientModal(false);\r\n      showToast(`클라이언트 \"${client.name}\"이(가) 삭제되었습니다.`, 'error');\r\n    }\r\n  };\r\n\r\n  // 그룹 관리\r\n  const handleAddGroup = (groupData) => {\r\n    const newGroup = {\r\n      id: `group_${Date.now()}`,\r\n      ...groupData,\r\n      created_at: new Date()\r\n    };\r\n    \r\n    setGroups(prev => [...prev, newGroup]);\r\n    showToast(`새 그룹 \"${groupData.name}\"이(가) 생성되었습니다.`, 'success');\r\n  };\r\n\r\n  const handleEditGroup = (groupId) => {\r\n    const group = groups.find(g => g.id === groupId);\r\n    if (group) {\r\n      setEditingGroup(group);\r\n      setShowGroupModal(true);\r\n    }\r\n  };\r\n\r\n  const handleSaveGroup = (groupData) => {\r\n    if (editingGroup) {\r\n      setGroups(prev => prev.map(g => \r\n        g.id === editingGroup.id ? { ...g, ...groupData } : g\r\n      ));\r\n      showToast(`그룹 \"${groupData.name}\"이(가) 수정되었습니다.`, 'success');\r\n    } else {\r\n      handleAddGroup(groupData);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGroup = (groupId) => {\r\n    const group = groups.find(g => g.id === groupId);\r\n    if (!group) return;\r\n    \r\n    if (window.confirm(`정말 \"${group.name}\" 그룹을 삭제하시겠습니까?`)) {\r\n      setGroups(prev => prev.filter(g => g.id !== groupId));\r\n      showToast(`그룹 \"${group.name}\"이(가) 삭제되었습니다.`, 'error');\r\n    }\r\n  };\r\n\r\n  // 프리셋 관리\r\n  const handleAddPreset = (presetData) => {\r\n    const newPreset = {\r\n      id: `preset_${Date.now()}`,\r\n      ...presetData,\r\n      created_at: new Date(),\r\n      is_active: false\r\n    };\r\n    \r\n    setPresets(prev => [...prev, newPreset]);\r\n    showToast(`새 프리셋 \"${presetData.name}\"이(가) 생성되었습니다.`, 'success');\r\n  };\r\n\r\n  const handleEditPreset = (presetId) => {\r\n    const preset = presets.find(p => p.id === presetId);\r\n    if (preset) {\r\n      setEditingPreset(preset);\r\n      setShowPresetModal(true);\r\n    }\r\n  };\r\n\r\n  const handleSavePreset = (presetData) => {\r\n    if (editingPreset) {\r\n      setPresets(prev => prev.map(p => \r\n        p.id === editingPreset.id ? { ...p, ...presetData } : p\r\n      ));\r\n      showToast(`프리셋 \"${presetData.name}\"이(가) 수정되었습니다.`, 'success');\r\n    } else {\r\n      handleAddPreset(presetData);\r\n    }\r\n  };\r\n\r\n  const handleDeletePreset = (presetId) => {\r\n    const preset = presets.find(p => p.id === presetId);\r\n    if (!preset) return;\r\n    \r\n    if (window.confirm(`정말 \"${preset.name}\" 프리셋을 삭제하시겠습니까?`)) {\r\n      setPresets(prev => prev.filter(p => p.id !== presetId));\r\n      showToast(`프리셋 \"${preset.name}\"이(가) 삭제되었습니다.`, 'error');\r\n    }\r\n  };\r\n\r\n  // 프리셋 실행\r\n  const handleExecutePreset = (presetId) => {\r\n    const preset = presets.find(p => p.id === presetId);\r\n    if (!preset) return;\r\n    \r\n    // 대상 클라이언트 수집\r\n    const targetClients = new Set();\r\n    preset.group_ids.forEach(groupId => {\r\n      const group = groups.find(g => g.id === groupId);\r\n      if (group) {\r\n        group.client_ids.forEach(clientId => {\r\n          const client = clients.find(c => c.id === clientId);\r\n          if (client && client.status !== 'offline') {\r\n            targetClients.add(clientId);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    if (targetClients.size === 0) {\r\n      showToast('실행 가능한 온라인 클라이언트가 없습니다.', 'error');\r\n      return;\r\n    }\r\n    \r\n    // 실행 기록 생성\r\n    const executionId = `exec_${Date.now()}`;\r\n    const execution = {\r\n      id: executionId,\r\n      preset_id: presetId,\r\n      preset_name: preset.name,\r\n      target_clients: Array.from(targetClients),\r\n      status: 'running',\r\n      started_at: new Date(),\r\n      completed_at: null,\r\n      results: {}\r\n    };\r\n    \r\n    // 각 클라이언트를 실행 중 상태로 변경\r\n    targetClients.forEach(clientId => {\r\n      updateClientStatus(clientId, 'running');\r\n      execution.results[clientId] = 'running';\r\n      addClientHistory(clientId, `프리셋 실행: ${preset.name}`);\r\n    });\r\n    \r\n    // 프리셋 활성화\r\n    setPresets(prev => prev.map(p => \r\n      p.id === presetId ? { ...p, is_active: true } : p\r\n    ));\r\n    \r\n    setExecutions(prev => [execution, ...prev.slice(0, 9)]);\r\n    \r\n    showToast(`프리셋 \"${preset.name}\"이(가) ${targetClients.size}개 클라이언트에서 실행되었습니다.`, 'success');\r\n    \r\n    // 실행 완료 시뮬레이션 (10-30초 후)\r\n    setTimeout(() => {\r\n      completeExecution(executionId);\r\n    }, Math.random() * 20000 + 10000);\r\n  };\r\n\r\n  const completeExecution = (executionId) => {\r\n    setExecutions(prev => prev.map(exec => {\r\n      if (exec.id === executionId) {\r\n        const updatedExec = {\r\n          ...exec,\r\n          status: 'completed',\r\n          completed_at: new Date()\r\n        };\r\n        \r\n        // 클라이언트들을 온라인 상태로 변경\r\n        exec.target_clients.forEach(clientId => {\r\n          updatedExec.results[clientId] = Math.random() > 0.1 ? 'success' : 'failed';\r\n          updateClientStatus(clientId, 'online');\r\n          addClientHistory(clientId, `프리셋 완료: ${updatedExec.results[clientId]}`);\r\n        });\r\n        \r\n        return updatedExec;\r\n      }\r\n      return exec;\r\n    }));\r\n    \r\n    // 프리셋 비활성화\r\n    const execution = executions.find(e => e.id === executionId);\r\n    if (execution) {\r\n      setPresets(prev => prev.map(p => \r\n        p.id === execution.preset_id ? { ...p, is_active: false } : p\r\n      ));\r\n    }\r\n    \r\n    const successCount = Object.values(execution.results || {}).filter(r => r === 'success').length;\r\n    const failedCount = Object.values(execution.results || {}).filter(r => r === 'failed').length;\r\n    \r\n    showToast(`프리셋 실행 완료: 성공 ${successCount}개, 실패 ${failedCount}개`, \r\n             failedCount === 0 ? 'success' : 'warning');\r\n  };\r\n\r\n  // 일괄 제어\r\n  const handleSelectAllPresets = (checked) => {\r\n    if (checked) {\r\n      setSelectedPresets(new Set(presets.map(p => p.id)));\r\n    } else {\r\n      setSelectedPresets(new Set());\r\n    }\r\n  };\r\n\r\n  const handleSelectAllGroups = (checked) => {\r\n    if (checked) {\r\n      setSelectedGroups(new Set(groups.map(g => g.id)));\r\n    } else {\r\n      setSelectedGroups(new Set());\r\n    }\r\n  };\r\n\r\n  const handleBulkPresetAction = (action) => {\r\n    if (selectedPresets.size === 0) {\r\n      showToast('선택된 프리셋이 없습니다.', 'error');\r\n      return;\r\n    }\r\n    \r\n    const actionNames = { execute: '실행', stop: '정지', delete: '삭제' };\r\n    const actionName = actionNames[action];\r\n    const presetCount = selectedPresets.size;\r\n    \r\n    if (action === 'delete') {\r\n      if (window.confirm(`선택된 ${presetCount}개 프리셋을 모두 삭제하시겠습니까?`)) {\r\n        selectedPresets.forEach(presetId => handleDeletePreset(presetId));\r\n        setSelectedPresets(new Set());\r\n      }\r\n    } else if (action === 'execute') {\r\n      if (window.confirm(`선택된 ${presetCount}개 프리셋을 모두 실행하시겠습니까?`)) {\r\n        let executed = 0;\r\n        selectedPresets.forEach(presetId => {\r\n          const preset = presets.find(p => p.id === presetId);\r\n          if (preset && !preset.is_active) {\r\n            handleExecutePreset(presetId);\r\n            executed++;\r\n          }\r\n        });\r\n        showToast(`${executed}개 프리셋이 실행되었습니다.`, 'success');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBulkGroupAction = (action) => {\r\n    if (selectedGroups.size === 0) {\r\n      showToast('선택된 그룹이 없습니다.', 'error');\r\n      return;\r\n    }\r\n    \r\n    const actionNames = { on: '켜기', reboot: '재부팅', off: '끄기' };\r\n    const actionName = actionNames[action];\r\n    const groupCount = selectedGroups.size;\r\n    \r\n    if (window.confirm(`선택된 ${groupCount}개 그룹의 모든 디스플레이 서버를 ${actionName} 하시겠습니까?`)) {\r\n      let totalClients = 0;\r\n      selectedGroups.forEach(groupId => {\r\n        const group = groups.find(g => g.id === groupId);\r\n        if (group) {\r\n          totalClients += group.client_ids.length;\r\n          group.client_ids.forEach(clientId => {\r\n            addClientHistory(clientId, `전원 ${actionName} 명령 수신`);\r\n          });\r\n        }\r\n      });\r\n      \r\n      showToast(`${groupCount}개 그룹 (${totalClients}대 클라이언트)에 전원 ${actionName} 명령을 전송했습니다. (v2.1에서 활성화)`, 'info');\r\n    }\r\n  };\r\n\r\n  // 데모 데이터 생성\r\n  const createDemoData = () => {\r\n    setTimeout(() => {\r\n      // 데모 클라이언트\r\n      const demoClients = [\r\n        { name: 'Display_01', ip_address: '192.168.1.101', status: 'online' },\r\n        { name: 'Display_02', ip_address: '192.168.1.102', status: 'running' },\r\n        { name: 'Display_03', ip_address: '192.168.1.103', status: 'offline' },\r\n        { name: 'Display_04', ip_address: '192.168.1.104', status: 'online' }\r\n      ];\r\n      \r\n      const newClients = demoClients.map((clientData, index) => ({\r\n        id: `demo_client_${index + 1}`,\r\n        name: clientData.name,\r\n        ip_address: clientData.ip_address,\r\n        port: 8081,\r\n        description: `데모 클라이언트 ${index + 1}`,\r\n        status: clientData.status,\r\n        created_at: new Date(Date.now() - (index * 86400000)),\r\n        last_seen: clientData.status !== 'offline' ? new Date() : null\r\n      }));\r\n      \r\n      setClients(newClients);\r\n      newClients.forEach(client => addClientHistory(client.id, '데모 데이터로 생성됨'));\r\n      \r\n      // 데모 그룹\r\n      setTimeout(() => {\r\n        const demoGroup = {\r\n          id: 'demo_group_1',\r\n          name: '메인 디스플레이 월',\r\n          description: '중앙 메인 디스플레이 구역',\r\n          client_ids: ['demo_client_1', 'demo_client_2', 'demo_client_4'],\r\n          created_at: new Date()\r\n        };\r\n        \r\n        setGroups([demoGroup]);\r\n      }, 500);\r\n      \r\n      // 데모 프리셋\r\n      setTimeout(() => {\r\n        const demoPreset = {\r\n          id: 'demo_preset_1',\r\n          name: '메인 콘텐츠 재생',\r\n          description: '4K 메인 콘텐츠 스트리밍',\r\n          command: 'D:\\\\UnrealProjects\\\\MainContent\\\\Windows\\\\MainContent.exe None -messaging -dc_cluster -nosplash -dc_cfg=\"C:\\\\nDisplay\\\\MainWall.ndisplay\" -dc_node=Node_0 -fullscreen',\r\n          group_ids: ['demo_group_1'],\r\n          created_at: new Date(),\r\n          is_active: false\r\n        };\r\n        \r\n        setPresets([demoPreset]);\r\n      }, 1000);\r\n      \r\n      showToast('데모 데이터가 로드되었습니다. 실제 환경에서는 서버와 연동됩니다.', 'info');\r\n    }, 3000);\r\n  };\r\n\r\n  // 통계 계산\r\n  const stats = {\r\n    totalClients: clients.length,\r\n    onlineClients: clients.filter(c => c.status === 'online' || c.status === 'running').length,\r\n    runningClients: clients.filter(c => c.status === 'running').length,\r\n    activeExecutions: executions.filter(e => e.status === 'running').length,\r\n    totalGroups: groups.length\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        isDarkMode={isDarkMode}\r\n        isSocketConnected={isSocketConnected}\r\n        currentTime={currentTime}\r\n        connectedCount={stats.onlineClients}\r\n        onToggleTheme={toggleDarkMode}\r\n      />\r\n      \r\n      <div className=\"container\">\r\n        <StatsBar stats={stats} />\r\n        \r\n        <div className=\"main-layout\">\r\n          <PresetSection \r\n            presets={presets}\r\n            groups={groups}\r\n            selectedPresets={selectedPresets}\r\n            onSelectAll={handleSelectAllPresets}\r\n            onBulkAction={handleBulkPresetAction}\r\n            onAddPreset={() => {\r\n              setEditingPreset(null);\r\n              setShowPresetModal(true);\r\n            }}\r\n            onEditPreset={handleEditPreset}\r\n            onDeletePreset={handleDeletePreset}\r\n            onExecutePreset={handleExecutePreset}\r\n            onSelectPreset={(presetId, selected) => {\r\n              setSelectedPresets(prev => {\r\n                const newSet = new Set(prev);\r\n                if (selected) {\r\n                  newSet.add(presetId);\r\n                } else {\r\n                  newSet.delete(presetId);\r\n                }\r\n                return newSet;\r\n              });\r\n            }}\r\n          />\r\n          \r\n          <GroupSection \r\n            groups={groups}\r\n            clients={clients}\r\n            selectedGroups={selectedGroups}\r\n            onSelectAll={handleSelectAllGroups}\r\n            onBulkAction={handleBulkGroupAction}\r\n            onAddGroup={() => {\r\n              setEditingGroup(null);\r\n              setShowGroupModal(true);\r\n            }}\r\n            onEditGroup={handleEditGroup}\r\n            onDeleteGroup={handleDeleteGroup}\r\n            onSelectGroup={(groupId, selected) => {\r\n              setSelectedGroups(prev => {\r\n                const newSet = new Set(prev);\r\n                if (selected) {\r\n                  newSet.add(groupId);\r\n                } else {\r\n                  newSet.delete(groupId);\r\n                }\r\n                return newSet;\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <ClientMonitor \r\n          clients={clients}\r\n          onAddClient={() => setShowAddClientModal(true)}\r\n          onClientClick={(clientId) => {\r\n            setCurrentClientId(clientId);\r\n            setShowClientModal(true);\r\n          }}\r\n        />\r\n        \r\n        <ExecutionMonitor \r\n          executions={executions}\r\n          clients={clients}\r\n        />\r\n      </div>\r\n      \r\n      {/* 모달들 */}\r\n      {showClientModal && (\r\n        <ClientDetailModal \r\n          client={clients.find(c => c.id === currentClientId)}\r\n          history={clientHistory[currentClientId] || []}\r\n          onClose={() => setShowClientModal(false)}\r\n          onAction={handleClientAction}\r\n          onDelete={handleDeleteClient}\r\n        />\r\n      )}\r\n      \r\n      {showAddClientModal && (\r\n        <AddClientModal \r\n          onClose={() => setShowAddClientModal(false)}\r\n          onAddClient={handleAddClient}\r\n        />\r\n      )}\r\n      \r\n      {showPresetModal && (\r\n        <PresetModal \r\n          onClose={() => {\r\n            setShowPresetModal(false);\r\n            setEditingPreset(null);\r\n          }}\r\n          onSave={handleSavePreset}\r\n          editingPreset={editingPreset}\r\n          groups={groups}\r\n        />\r\n      )}\r\n      \r\n      {showGroupModal && (\r\n        <GroupModal \r\n          onClose={() => {\r\n            setShowGroupModal(false);\r\n            setEditingGroup(null);\r\n          }}\r\n          onSave={handleSaveGroup}\r\n          editingGroup={editingGroup}\r\n          clients={clients}\r\n        />\r\n      )}\r\n      \r\n      {/* 토스트 */}\r\n      <Toast \r\n        show={toast.show}\r\n        message={toast.message}\r\n        type={toast.type}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}